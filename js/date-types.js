"use strict";

// Типы данных

// Простые типы данных

// Число
let number = 4.6; // можно использовать обычное число и дробные 4, 4.6

console.log(-4 / 0); // infinity - обозначает бесконечность и относится к примитивам числам.
console.log("string" * 9); // Nan - Not A Number, невозможно слова ('string') умножить на цифры.

// Строки
const persone = "Alex"; // ОБЯЗАТЕЛЬНО слова в ковычках!!! нет разницы какие ковычки использовать ('', "", ``;)
const personeNumber = "5"; // Можно использовать числа в строках и это будут строки, а не число.

// Булиновые значения
const bool = true; // true or false

// Null и undefined
console.log(something); // Null - ReferenceError, описывается как ошибка - НЕ СУЩЕСТВУЕТ

let und;
console.log(und); // Undefined - что-то есть, но не содержит ничего.

// Объекты - это коллекция данных, структура которая использует хранение данных
const obj = {
  name: "John",
  age: 25,
  isMarried: false,
};

// console.log(obj.name);
console.log(obj["name"]); // можно писать через точку и через квадратные скобки [""].
// Использовать квадратные скобки когда: {кириллица, другой язык, цифры и т.д}

const arrObj = {
  0: "a",
  1: "b",
  2: "c",
  abc: {
    def: {},
    df: [{}, {}], // можно объект в объекте, массив.
  },
};
// console.log(arrObj.0); // точку не ставить к цифрам - Ошибка!

arrObj.b = "1234"; // Можно добавить значения которого нету в объекте и он правильно выведится.
// arrObj[b] - переменная
// arrObj["b"] = "1234";
// console.log(arrObj.b);
// console.log(arrObj["b"]);

// Массив - это частный случай объекта.
// Объект использует кастомное ключ значение.
// Массив использует автоматические ключ значения, которые задаются по умолчанию ( начинаю с 0 - ... );
let arr = ["plum.png", "orange.jpg", 6, "apple.bmp", {}, []]; // Классический массив.
console.log(arr[1]); // счёт начинается с 0.

arr[10] = "3456";
console.log(arr[10]); // назначаю 10 номеру значение и массив его вывгодит, при этом сосздаёт пустые ячейки с 6 до 9.
